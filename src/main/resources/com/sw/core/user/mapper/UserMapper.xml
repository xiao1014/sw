<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sw.core.user.dao.UserMapper" >
    <resultMap id="BaseResultMap" type="com.sw.core.user.domain.User" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="account_name" property="accountName" jdbcType="VARCHAR" />
        <result column="salt" property="salt" jdbcType="VARCHAR" />
        <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, username, password, account_name, role_id
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="findUserList" resultType="java.util.HashMap">
        SELECT
        <include refid="Base_Column_List" />
        from user WHERE 1=1
        <if test="searchUser!=null and searchUser!=''">
            AND (username like '%${searchUser}%' OR account_name LIKE '%${searchUser}%')
        </if>
        ORDER BY ${sort} ${order}
        limit #{offset},#{limit}
    </select>

    <select id="count" resultType="java.lang.Long">
        SELECT count(1) FROM user WHERE 1=1
        <if test="searchUser!=null and searchUser!=''">
            AND (username like '%${searchUser}%' OR account_name LIKE '%${searchUser}%')
        </if>
    </select>

    <select id="selectByAccountName" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        id, username, account_name, salt, password, role_id
        from user
        where account_name = #{account_name,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from user
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.sw.core.user.domain.User" >
        insert into user (id, username, password,
        account_name, salt, role_id)
        values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{accountName,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.sw.core.user.domain.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="accountName != null" >
                account_name,
            </if>
            <if test="roleId != null" >
                role_id,
            </if>
            <if test="salt != null" >
                salt,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="accountName != null" >
                #{accountName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sw.core.user.domain.User" >
        update user
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="accountName != null" >
                account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null" >
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sw.core.user.domain.User" >
        update user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        account_name = #{accountName,jdbcType=VARCHAR},
        role_id = #{roleId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="deleteByIds" parameterType="java.util.List">
        DELETE FROM USER WHERE id IN
        <foreach collection="list" item="id" index="index"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

</mapper>